# Frontend deps stage
FROM node:22-alpine AS frontend-deps

WORKDIR /app

# Create and set ownership of node_modules directory
RUN mkdir -p /app/frontend/node_modules && chown -R node:node /app

# Switch to non-root user
USER node

# Copy only files needed for dependency installation
COPY --chown=node:node package*.json ./
COPY --chown=node:node frontend/package.json ./frontend/

# Install frontend dependencies using workspace
RUN npm ci -w frontend

# Backend deps stage
FROM node:22-alpine AS backend-deps

WORKDIR /app

# Create necessary directories and set ownership
RUN mkdir -p /app/backend/node_modules && chown -R node:node /app

# Switch to non-root user
USER node

# Copy only files needed for dependency installation
COPY --chown=node:node package*.json ./
COPY --chown=node:node backend/package.json ./backend/

# Install production dependencies using workspace
ENV NODE_ENV=production
RUN npm ci -w backend --omit=dev

# Build stage
FROM node:22-alpine AS build

WORKDIR /app

# Create necessary directories and set ownership
RUN mkdir -p /app/frontend/node_modules /app/backend/node_modules && \
   chown -R node:node /app

# Switch to non-root user
USER node

# Copy deps from previous stages
COPY --chown=node:node --from=frontend-deps /app/frontend/node_modules ./frontend/node_modules
COPY --chown=node:node --from=frontend-deps /app/node_modules ./node_modules
COPY --chown=node:node --from=backend-deps /app/backend/node_modules ./backend/node_modules

# Copy package files
COPY --chown=node:node package*.json ./
COPY --chown=node:node frontend/package.json ./frontend/
COPY --chown=node:node backend/package.json ./backend/

# Copy source code
COPY --chown=node:node . .

# Build frontend using npm workspace command
RUN npm run build -w frontend

# Production stage - Frontend
FROM nginx:alpine AS frontend

# Copy built frontend files to nginx
COPY --from=build /app/frontend/dist /usr/share/nginx/html

# Copy nginx configuration
COPY --from=build /app/frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Expose frontend port
EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]

# Production stage - Backend
FROM node:22-alpine AS backend

WORKDIR /app

# Create necessary directories and set ownership
RUN mkdir -p /app/backend/node_modules /app/backend/analyses-storage && chown -R node:node /app

# Switch to non-root user
USER node

# Copy only the production dependencies from deps stage
COPY --chown=node:node --from=backend-deps /app/backend/node_modules ./backend/node_modules
COPY --chown=node:node --from=backend-deps /app/node_modules ./node_modules

# Copy package files and backend source
COPY --chown=node:node package*.json ./
COPY --chown=node:node backend/package.json ./backend/
COPY --chown=node:node backend ./backend

# Set up environment and persistent storage
ENV NODE_ENV=production
ENV NODE_PATH=/app/node_modules:/app/backend/src

# Create analyses-storage directory structure with proper permissions
USER root
RUN mkdir -p /app/backend/analyses-storage/analyses \
   /app/backend/analyses-storage/config \
   && chown -R node:node /app/backend/analyses-storage

# Set up a volume for persistent storage at the new location
VOLUME [ "/app/backend/analyses-storage" ]

USER node
EXPOSE 3000

CMD ["npm", "start", "-w", "backend"]